# Generated by Django 5.2.3 on 2025-06-16 05:23

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIDataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('base_url', models.URLField()),
                ('api_key_required', models.BooleanField(default=False)),
                ('rate_limit_per_hour', models.IntegerField(default=1000)),
                ('current_usage', models.IntegerField(default=0)),
                ('last_reset', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('reliability_score', models.FloatField(default=1.0)),
            ],
            options={
                'db_table': 'api_data_sources',
            },
        ),
        migrations.CreateModel(
            name='AstronomyPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('title', models.CharField(max_length=300)),
                ('explanation', models.TextField()),
                ('url', models.URLField()),
                ('hdurl', models.URLField(blank=True)),
                ('media_type', models.CharField(default='image', max_length=20)),
                ('copyright', models.CharField(blank=True, max_length=200)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'astronomy_pictures',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CelestialEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('moon_phase', 'Moon Phase'), ('eclipse', 'Eclipse'), ('meteor_shower', 'Meteor Shower'), ('planetary_event', 'Planetary Event'), ('iss_pass', 'ISS Pass'), ('sunrise_sunset', 'Sunrise/Sunset'), ('astronomical_twilight', 'Astronomical Twilight'), ('conjunction', 'Conjunction'), ('opposition', 'Opposition')], max_length=50)),
                ('date_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('external_id', models.CharField(help_text='ID from external API', max_length=200)),
                ('raw_api_data', models.JSONField(default=dict, help_text='Original API response')),
                ('last_updated_from_api', models.DateTimeField(auto_now=True)),
                ('magnitude', models.FloatField(blank=True, null=True)),
                ('visibility_info', models.JSONField(default=dict)),
                ('coordinates', models.JSONField(default=dict, help_text='Sky coordinates from API')),
                ('is_featured', models.BooleanField(default=False)),
                ('importance_level', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')], default=2)),
                ('api_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='astronomical_events.apidatasource')),
            ],
            options={
                'db_table': 'celestial_events',
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eclipse',
            fields=[
                ('celestialevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astronomical_events.celestialevent')),
                ('eclipse_type', models.CharField(choices=[('solar_total', 'Total Solar Eclipse'), ('solar_partial', 'Partial Solar Eclipse'), ('solar_annular', 'Annular Solar Eclipse'), ('lunar_total', 'Total Lunar Eclipse'), ('lunar_partial', 'Partial Lunar Eclipse'), ('lunar_penumbral', 'Penumbral Lunar Eclipse')], max_length=20)),
                ('obscuration_percentage', models.FloatField()),
                ('path_coordinates', models.JSONField(default=list, help_text='Path coordinates from API')),
                ('visibility_regions', models.JSONField(default=list, help_text='Where eclipse is visible')),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eclipse_events',
            },
            bases=('astronomical_events.celestialevent',),
        ),
        migrations.CreateModel(
            name='ISSPass',
            fields=[
                ('celestialevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astronomical_events.celestialevent')),
                ('max_elevation', models.FloatField()),
                ('direction_start', models.CharField(max_length=10)),
                ('direction_end', models.CharField(max_length=10)),
                ('brightness', models.FloatField(help_text='Visual magnitude')),
                ('duration_seconds', models.IntegerField()),
            ],
            options={
                'db_table': 'iss_pass_events',
            },
            bases=('astronomical_events.celestialevent',),
        ),
        migrations.CreateModel(
            name='MoonPhase',
            fields=[
                ('celestialevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astronomical_events.celestialevent')),
                ('phase', models.CharField(choices=[('new_moon', 'New Moon'), ('waxing_crescent', 'Waxing Crescent'), ('first_quarter', 'First Quarter'), ('waxing_gibbous', 'Waxing Gibbous'), ('full_moon', 'Full Moon'), ('waning_gibbous', 'Waning Gibbous'), ('last_quarter', 'Last Quarter'), ('waning_crescent', 'Waning Crescent')], max_length=20)),
                ('illumination_percentage', models.FloatField()),
                ('angular_diameter', models.FloatField(blank=True, null=True)),
                ('distance_km', models.FloatField(blank=True, null=True)),
                ('moon_age_days', models.FloatField(blank=True, help_text='Days since new moon', null=True)),
                ('zodiac_sign', models.CharField(blank=True, max_length=20)),
                ('lunation_number', models.IntegerField(blank=True, null=True)),
                ('is_supermoon', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'moon_phase_events',
            },
            bases=('astronomical_events.celestialevent',),
        ),
        migrations.CreateModel(
            name='PlanetaryEvent',
            fields=[
                ('celestialevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='astronomical_events.celestialevent')),
                ('planet_name', models.CharField(max_length=50)),
                ('constellation', models.CharField(max_length=50)),
                ('apparent_magnitude', models.FloatField()),
                ('angular_diameter', models.FloatField(blank=True, null=True)),
                ('distance_au', models.FloatField(blank=True, null=True)),
                ('phase_percentage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planetary_events',
            },
            bases=('astronomical_events.celestialevent',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('timezone', models.CharField(max_length=50)),
                ('country_code', models.CharField(max_length=3)),
                ('last_api_update', models.DateTimeField(blank=True, null=True)),
                ('api_cache_valid_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='locations_latitud_4052bd_idx'), models.Index(fields=['last_api_update'], name='locations_last_ap_fad9ef_idx')],
            },
        ),
        migrations.AddField(
            model_name='celestialevent',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='astronomical_events.location'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('event_types', models.JSONField(default=list)),
                ('minimum_importance', models.IntegerField(default=2)),
                ('notification_advance_hours', models.IntegerField(default=24)),
                ('email_enabled', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Summary'), ('weekly', 'Weekly Summary')], default='daily', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('locations', models.ManyToManyField(blank=True, to='astronomical_events.location')),
            ],
            options={
                'db_table': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=200)),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('response_status', models.IntegerField()),
                ('response_time_ms', models.IntegerField()),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True)),
                ('api_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='astronomical_events.apidatasource')),
            ],
            options={
                'db_table': 'api_usage_logs',
                'indexes': [models.Index(fields=['api_source', 'request_time'], name='api_usage_l_api_sou_20d6ec_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='celestialevent',
            index=models.Index(fields=['date_time', 'event_type'], name='celestial_e_date_ti_8369b1_idx'),
        ),
        migrations.AddIndex(
            model_name='celestialevent',
            index=models.Index(fields=['location', 'date_time'], name='celestial_e_locatio_f579e3_idx'),
        ),
        migrations.AddIndex(
            model_name='celestialevent',
            index=models.Index(fields=['api_source', 'last_updated_from_api'], name='celestial_e_api_sou_c6efef_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='celestialevent',
            unique_together={('external_id', 'api_source', 'date_time')},
        ),
    ]
